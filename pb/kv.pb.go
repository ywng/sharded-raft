// Code generated by protoc-gen-go. DO NOT EDIT.
// source: kv.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Internal representations for operations.
type Op int32

const (
	Op_GET          Op = 0
	Op_SET          Op = 1
	Op_CLEAR        Op = 2
	Op_CAS          Op = 3
	Op_JOIN         Op = 4
	Op_LEAVE        Op = 5
	Op_MOVE         Op = 6
	Op_QUERY        Op = 7
	Op_SHARD_CONFIG Op = 8
	Op_CONFIG_CHG   Op = 9
)

var Op_name = map[int32]string{
	0: "GET",
	1: "SET",
	2: "CLEAR",
	3: "CAS",
	4: "JOIN",
	5: "LEAVE",
	6: "MOVE",
	7: "QUERY",
	8: "SHARD_CONFIG",
	9: "CONFIG_CHG",
}

var Op_value = map[string]int32{
	"GET":          0,
	"SET":          1,
	"CLEAR":        2,
	"CAS":          3,
	"JOIN":         4,
	"LEAVE":        5,
	"MOVE":         6,
	"QUERY":        7,
	"SHARD_CONFIG": 8,
	"CONFIG_CHG":   9,
}

func (x Op) String() string {
	return proto.EnumName(Op_name, int32(x))
}

func (Op) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2216fe83c9c12408, []int{0}
}

// Represents a single key, used for gets.
type Key struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Key) Reset()         { *m = Key{} }
func (m *Key) String() string { return proto.CompactTextString(m) }
func (*Key) ProtoMessage()    {}
func (*Key) Descriptor() ([]byte, []int) {
	return fileDescriptor_2216fe83c9c12408, []int{0}
}

func (m *Key) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Key.Unmarshal(m, b)
}
func (m *Key) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Key.Marshal(b, m, deterministic)
}
func (m *Key) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Key.Merge(m, src)
}
func (m *Key) XXX_Size() int {
	return xxx_messageInfo_Key.Size(m)
}
func (m *Key) XXX_DiscardUnknown() {
	xxx_messageInfo_Key.DiscardUnknown(m)
}

var xxx_messageInfo_Key proto.InternalMessageInfo

func (m *Key) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

// Represents a single value, can be used for put etc.
type Value struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Value) Reset()         { *m = Value{} }
func (m *Value) String() string { return proto.CompactTextString(m) }
func (*Value) ProtoMessage()    {}
func (*Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_2216fe83c9c12408, []int{1}
}

func (m *Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Value.Unmarshal(m, b)
}
func (m *Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Value.Marshal(b, m, deterministic)
}
func (m *Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Value.Merge(m, src)
}
func (m *Value) XXX_Size() int {
	return xxx_messageInfo_Value.Size(m)
}
func (m *Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Value proto.InternalMessageInfo

func (m *Value) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Represent a key-value pair that is used to return results.
type KeyValue struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyValue) Reset()         { *m = KeyValue{} }
func (m *KeyValue) String() string { return proto.CompactTextString(m) }
func (*KeyValue) ProtoMessage()    {}
func (*KeyValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_2216fe83c9c12408, []int{2}
}

func (m *KeyValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyValue.Unmarshal(m, b)
}
func (m *KeyValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyValue.Marshal(b, m, deterministic)
}
func (m *KeyValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyValue.Merge(m, src)
}
func (m *KeyValue) XXX_Size() int {
	return xxx_messageInfo_KeyValue.Size(m)
}
func (m *KeyValue) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyValue.DiscardUnknown(m)
}

var xxx_messageInfo_KeyValue proto.InternalMessageInfo

func (m *KeyValue) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *KeyValue) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Represent a void message indicating success
type Success struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Success) Reset()         { *m = Success{} }
func (m *Success) String() string { return proto.CompactTextString(m) }
func (*Success) ProtoMessage()    {}
func (*Success) Descriptor() ([]byte, []int) {
	return fileDescriptor_2216fe83c9c12408, []int{3}
}

func (m *Success) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Success.Unmarshal(m, b)
}
func (m *Success) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Success.Marshal(b, m, deterministic)
}
func (m *Success) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Success.Merge(m, src)
}
func (m *Success) XXX_Size() int {
	return xxx_messageInfo_Success.Size(m)
}
func (m *Success) XXX_DiscardUnknown() {
	xxx_messageInfo_Success.DiscardUnknown(m)
}

var xxx_messageInfo_Success proto.InternalMessageInfo

// Represent a void message indicating success
type Failure struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Failure) Reset()         { *m = Failure{} }
func (m *Failure) String() string { return proto.CompactTextString(m) }
func (*Failure) ProtoMessage()    {}
func (*Failure) Descriptor() ([]byte, []int) {
	return fileDescriptor_2216fe83c9c12408, []int{4}
}

func (m *Failure) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Failure.Unmarshal(m, b)
}
func (m *Failure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Failure.Marshal(b, m, deterministic)
}
func (m *Failure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Failure.Merge(m, src)
}
func (m *Failure) XXX_Size() int {
	return xxx_messageInfo_Failure.Size(m)
}
func (m *Failure) XXX_DiscardUnknown() {
	xxx_messageInfo_Failure.DiscardUnknown(m)
}

var xxx_messageInfo_Failure proto.InternalMessageInfo

func (m *Failure) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

// Represents an error.
type Error struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_2216fe83c9c12408, []int{5}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

// Represents an argument for CAS
type CASArg struct {
	Kv                   *KeyValue `protobuf:"bytes,1,opt,name=kv,proto3" json:"kv,omitempty"`
	Value                *Value    `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CASArg) Reset()         { *m = CASArg{} }
func (m *CASArg) String() string { return proto.CompactTextString(m) }
func (*CASArg) ProtoMessage()    {}
func (*CASArg) Descriptor() ([]byte, []int) {
	return fileDescriptor_2216fe83c9c12408, []int{6}
}

func (m *CASArg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CASArg.Unmarshal(m, b)
}
func (m *CASArg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CASArg.Marshal(b, m, deterministic)
}
func (m *CASArg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CASArg.Merge(m, src)
}
func (m *CASArg) XXX_Size() int {
	return xxx_messageInfo_CASArg.Size(m)
}
func (m *CASArg) XXX_DiscardUnknown() {
	xxx_messageInfo_CASArg.DiscardUnknown(m)
}

var xxx_messageInfo_CASArg proto.InternalMessageInfo

func (m *CASArg) GetKv() *KeyValue {
	if m != nil {
		return m.Kv
	}
	return nil
}

func (m *CASArg) GetValue() *Value {
	if m != nil {
		return m.Value
	}
	return nil
}

// Represents an empty message
type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_2216fe83c9c12408, []int{7}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

// Represents a case where we need the client to connect
// to another server.
type Redirect struct {
	Server               string   `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Redirect) Reset()         { *m = Redirect{} }
func (m *Redirect) String() string { return proto.CompactTextString(m) }
func (*Redirect) ProtoMessage()    {}
func (*Redirect) Descriptor() ([]byte, []int) {
	return fileDescriptor_2216fe83c9c12408, []int{8}
}

func (m *Redirect) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Redirect.Unmarshal(m, b)
}
func (m *Redirect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Redirect.Marshal(b, m, deterministic)
}
func (m *Redirect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Redirect.Merge(m, src)
}
func (m *Redirect) XXX_Size() int {
	return xxx_messageInfo_Redirect.Size(m)
}
func (m *Redirect) XXX_DiscardUnknown() {
	xxx_messageInfo_Redirect.DiscardUnknown(m)
}

var xxx_messageInfo_Redirect proto.InternalMessageInfo

func (m *Redirect) GetServer() string {
	if m != nil {
		return m.Server
	}
	return ""
}

// Wrong shard group, redirect to the right shard group or
// client can query the shard master for latest config
type ErrWrongGroup struct {
	Config               *ShardConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ErrWrongGroup) Reset()         { *m = ErrWrongGroup{} }
func (m *ErrWrongGroup) String() string { return proto.CompactTextString(m) }
func (*ErrWrongGroup) ProtoMessage()    {}
func (*ErrWrongGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_2216fe83c9c12408, []int{9}
}

func (m *ErrWrongGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrWrongGroup.Unmarshal(m, b)
}
func (m *ErrWrongGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrWrongGroup.Marshal(b, m, deterministic)
}
func (m *ErrWrongGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrWrongGroup.Merge(m, src)
}
func (m *ErrWrongGroup) XXX_Size() int {
	return xxx_messageInfo_ErrWrongGroup.Size(m)
}
func (m *ErrWrongGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrWrongGroup.DiscardUnknown(m)
}

var xxx_messageInfo_ErrWrongGroup proto.InternalMessageInfo

func (m *ErrWrongGroup) GetConfig() *ShardConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

// Represents an operation result.
type Result struct {
	// Types that are valid to be assigned to Result:
	//	*Result_Redirect
	//	*Result_Kv
	//	*Result_S
	//	*Result_WrongG
	//	*Result_Failure
	//	*Result_Config
	Result               isResult_Result `protobuf_oneof:"result"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_2216fe83c9c12408, []int{10}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

type isResult_Result interface {
	isResult_Result()
}

type Result_Redirect struct {
	Redirect *Redirect `protobuf:"bytes,1,opt,name=redirect,proto3,oneof"`
}

type Result_Kv struct {
	Kv *KeyValue `protobuf:"bytes,2,opt,name=kv,proto3,oneof"`
}

type Result_S struct {
	S *Success `protobuf:"bytes,3,opt,name=s,proto3,oneof"`
}

type Result_WrongG struct {
	WrongG *ErrWrongGroup `protobuf:"bytes,4,opt,name=wrongG,proto3,oneof"`
}

type Result_Failure struct {
	Failure *Failure `protobuf:"bytes,5,opt,name=failure,proto3,oneof"`
}

type Result_Config struct {
	Config *ShardConfig `protobuf:"bytes,6,opt,name=config,proto3,oneof"`
}

func (*Result_Redirect) isResult_Result() {}

func (*Result_Kv) isResult_Result() {}

func (*Result_S) isResult_Result() {}

func (*Result_WrongG) isResult_Result() {}

func (*Result_Failure) isResult_Result() {}

func (*Result_Config) isResult_Result() {}

func (m *Result) GetResult() isResult_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *Result) GetRedirect() *Redirect {
	if x, ok := m.GetResult().(*Result_Redirect); ok {
		return x.Redirect
	}
	return nil
}

func (m *Result) GetKv() *KeyValue {
	if x, ok := m.GetResult().(*Result_Kv); ok {
		return x.Kv
	}
	return nil
}

func (m *Result) GetS() *Success {
	if x, ok := m.GetResult().(*Result_S); ok {
		return x.S
	}
	return nil
}

func (m *Result) GetWrongG() *ErrWrongGroup {
	if x, ok := m.GetResult().(*Result_WrongG); ok {
		return x.WrongG
	}
	return nil
}

func (m *Result) GetFailure() *Failure {
	if x, ok := m.GetResult().(*Result_Failure); ok {
		return x.Failure
	}
	return nil
}

func (m *Result) GetConfig() *ShardConfig {
	if x, ok := m.GetResult().(*Result_Config); ok {
		return x.Config
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Result) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Result_Redirect)(nil),
		(*Result_Kv)(nil),
		(*Result_S)(nil),
		(*Result_WrongG)(nil),
		(*Result_Failure)(nil),
		(*Result_Config)(nil),
	}
}

// A type for arguments across all operations
type Command struct {
	Operation Op `protobuf:"varint,1,opt,name=operation,proto3,enum=pb.Op" json:"operation,omitempty"`
	// Types that are valid to be assigned to Arg:
	//	*Command_Get
	//	*Command_Set
	//	*Command_Clear
	//	*Command_Cas
	//	*Command_JoinArgs
	//	*Command_LeaveArgs
	//	*Command_MoveArgs
	//	*Command_QueryArgs
	//	*Command_ShardConfig
	//	*Command_Servers
	Arg                  isCommand_Arg `protobuf_oneof:"arg"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Command) Reset()         { *m = Command{} }
func (m *Command) String() string { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()    {}
func (*Command) Descriptor() ([]byte, []int) {
	return fileDescriptor_2216fe83c9c12408, []int{11}
}

func (m *Command) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Command.Unmarshal(m, b)
}
func (m *Command) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Command.Marshal(b, m, deterministic)
}
func (m *Command) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Command.Merge(m, src)
}
func (m *Command) XXX_Size() int {
	return xxx_messageInfo_Command.Size(m)
}
func (m *Command) XXX_DiscardUnknown() {
	xxx_messageInfo_Command.DiscardUnknown(m)
}

var xxx_messageInfo_Command proto.InternalMessageInfo

func (m *Command) GetOperation() Op {
	if m != nil {
		return m.Operation
	}
	return Op_GET
}

type isCommand_Arg interface {
	isCommand_Arg()
}

type Command_Get struct {
	Get *Key `protobuf:"bytes,2,opt,name=get,proto3,oneof"`
}

type Command_Set struct {
	Set *KeyValue `protobuf:"bytes,3,opt,name=set,proto3,oneof"`
}

type Command_Clear struct {
	Clear *Empty `protobuf:"bytes,4,opt,name=clear,proto3,oneof"`
}

type Command_Cas struct {
	Cas *CASArg `protobuf:"bytes,5,opt,name=cas,proto3,oneof"`
}

type Command_JoinArgs struct {
	JoinArgs *JoinArgs `protobuf:"bytes,6,opt,name=joinArgs,proto3,oneof"`
}

type Command_LeaveArgs struct {
	LeaveArgs *LeaveArgs `protobuf:"bytes,7,opt,name=leaveArgs,proto3,oneof"`
}

type Command_MoveArgs struct {
	MoveArgs *MoveArgs `protobuf:"bytes,8,opt,name=moveArgs,proto3,oneof"`
}

type Command_QueryArgs struct {
	QueryArgs *QueryArgs `protobuf:"bytes,9,opt,name=queryArgs,proto3,oneof"`
}

type Command_ShardConfig struct {
	ShardConfig *ShardConfig `protobuf:"bytes,10,opt,name=shardConfig,proto3,oneof"`
}

type Command_Servers struct {
	Servers *Servers `protobuf:"bytes,11,opt,name=servers,proto3,oneof"`
}

func (*Command_Get) isCommand_Arg() {}

func (*Command_Set) isCommand_Arg() {}

func (*Command_Clear) isCommand_Arg() {}

func (*Command_Cas) isCommand_Arg() {}

func (*Command_JoinArgs) isCommand_Arg() {}

func (*Command_LeaveArgs) isCommand_Arg() {}

func (*Command_MoveArgs) isCommand_Arg() {}

func (*Command_QueryArgs) isCommand_Arg() {}

func (*Command_ShardConfig) isCommand_Arg() {}

func (*Command_Servers) isCommand_Arg() {}

func (m *Command) GetArg() isCommand_Arg {
	if m != nil {
		return m.Arg
	}
	return nil
}

func (m *Command) GetGet() *Key {
	if x, ok := m.GetArg().(*Command_Get); ok {
		return x.Get
	}
	return nil
}

func (m *Command) GetSet() *KeyValue {
	if x, ok := m.GetArg().(*Command_Set); ok {
		return x.Set
	}
	return nil
}

func (m *Command) GetClear() *Empty {
	if x, ok := m.GetArg().(*Command_Clear); ok {
		return x.Clear
	}
	return nil
}

func (m *Command) GetCas() *CASArg {
	if x, ok := m.GetArg().(*Command_Cas); ok {
		return x.Cas
	}
	return nil
}

func (m *Command) GetJoinArgs() *JoinArgs {
	if x, ok := m.GetArg().(*Command_JoinArgs); ok {
		return x.JoinArgs
	}
	return nil
}

func (m *Command) GetLeaveArgs() *LeaveArgs {
	if x, ok := m.GetArg().(*Command_LeaveArgs); ok {
		return x.LeaveArgs
	}
	return nil
}

func (m *Command) GetMoveArgs() *MoveArgs {
	if x, ok := m.GetArg().(*Command_MoveArgs); ok {
		return x.MoveArgs
	}
	return nil
}

func (m *Command) GetQueryArgs() *QueryArgs {
	if x, ok := m.GetArg().(*Command_QueryArgs); ok {
		return x.QueryArgs
	}
	return nil
}

func (m *Command) GetShardConfig() *ShardConfig {
	if x, ok := m.GetArg().(*Command_ShardConfig); ok {
		return x.ShardConfig
	}
	return nil
}

func (m *Command) GetServers() *Servers {
	if x, ok := m.GetArg().(*Command_Servers); ok {
		return x.Servers
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Command) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Command_Get)(nil),
		(*Command_Set)(nil),
		(*Command_Clear)(nil),
		(*Command_Cas)(nil),
		(*Command_JoinArgs)(nil),
		(*Command_LeaveArgs)(nil),
		(*Command_MoveArgs)(nil),
		(*Command_QueryArgs)(nil),
		(*Command_ShardConfig)(nil),
		(*Command_Servers)(nil),
	}
}

type Servers struct {
	CurrList             string   `protobuf:"bytes,1,opt,name=currList,proto3" json:"currList,omitempty"`
	NewList              string   `protobuf:"bytes,2,opt,name=newList,proto3" json:"newList,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Servers) Reset()         { *m = Servers{} }
func (m *Servers) String() string { return proto.CompactTextString(m) }
func (*Servers) ProtoMessage()    {}
func (*Servers) Descriptor() ([]byte, []int) {
	return fileDescriptor_2216fe83c9c12408, []int{12}
}

func (m *Servers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Servers.Unmarshal(m, b)
}
func (m *Servers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Servers.Marshal(b, m, deterministic)
}
func (m *Servers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Servers.Merge(m, src)
}
func (m *Servers) XXX_Size() int {
	return xxx_messageInfo_Servers.Size(m)
}
func (m *Servers) XXX_DiscardUnknown() {
	xxx_messageInfo_Servers.DiscardUnknown(m)
}

var xxx_messageInfo_Servers proto.InternalMessageInfo

func (m *Servers) GetCurrList() string {
	if m != nil {
		return m.CurrList
	}
	return ""
}

func (m *Servers) GetNewList() string {
	if m != nil {
		return m.NewList
	}
	return ""
}

// A log entry
type Entry struct {
	Term                 int64    `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	Index                int64    `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Cmd                  *Command `protobuf:"bytes,3,opt,name=cmd,proto3" json:"cmd,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Entry) Reset()         { *m = Entry{} }
func (m *Entry) String() string { return proto.CompactTextString(m) }
func (*Entry) ProtoMessage()    {}
func (*Entry) Descriptor() ([]byte, []int) {
	return fileDescriptor_2216fe83c9c12408, []int{13}
}

func (m *Entry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Entry.Unmarshal(m, b)
}
func (m *Entry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Entry.Marshal(b, m, deterministic)
}
func (m *Entry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Entry.Merge(m, src)
}
func (m *Entry) XXX_Size() int {
	return xxx_messageInfo_Entry.Size(m)
}
func (m *Entry) XXX_DiscardUnknown() {
	xxx_messageInfo_Entry.DiscardUnknown(m)
}

var xxx_messageInfo_Entry proto.InternalMessageInfo

func (m *Entry) GetTerm() int64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *Entry) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Entry) GetCmd() *Command {
	if m != nil {
		return m.Cmd
	}
	return nil
}

// Input to AppendEntries (as defined in Figure 2)
type AppendEntriesArgs struct {
	Term                 int64    `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	LeaderID             string   `protobuf:"bytes,2,opt,name=leaderID,proto3" json:"leaderID,omitempty"`
	PrevLogIndex         int64    `protobuf:"varint,3,opt,name=prevLogIndex,proto3" json:"prevLogIndex,omitempty"`
	PrevLogTerm          int64    `protobuf:"varint,4,opt,name=prevLogTerm,proto3" json:"prevLogTerm,omitempty"`
	LeaderCommit         int64    `protobuf:"varint,5,opt,name=leaderCommit,proto3" json:"leaderCommit,omitempty"`
	Entries              []*Entry `protobuf:"bytes,6,rep,name=entries,proto3" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppendEntriesArgs) Reset()         { *m = AppendEntriesArgs{} }
func (m *AppendEntriesArgs) String() string { return proto.CompactTextString(m) }
func (*AppendEntriesArgs) ProtoMessage()    {}
func (*AppendEntriesArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_2216fe83c9c12408, []int{14}
}

func (m *AppendEntriesArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppendEntriesArgs.Unmarshal(m, b)
}
func (m *AppendEntriesArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppendEntriesArgs.Marshal(b, m, deterministic)
}
func (m *AppendEntriesArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppendEntriesArgs.Merge(m, src)
}
func (m *AppendEntriesArgs) XXX_Size() int {
	return xxx_messageInfo_AppendEntriesArgs.Size(m)
}
func (m *AppendEntriesArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_AppendEntriesArgs.DiscardUnknown(m)
}

var xxx_messageInfo_AppendEntriesArgs proto.InternalMessageInfo

func (m *AppendEntriesArgs) GetTerm() int64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *AppendEntriesArgs) GetLeaderID() string {
	if m != nil {
		return m.LeaderID
	}
	return ""
}

func (m *AppendEntriesArgs) GetPrevLogIndex() int64 {
	if m != nil {
		return m.PrevLogIndex
	}
	return 0
}

func (m *AppendEntriesArgs) GetPrevLogTerm() int64 {
	if m != nil {
		return m.PrevLogTerm
	}
	return 0
}

func (m *AppendEntriesArgs) GetLeaderCommit() int64 {
	if m != nil {
		return m.LeaderCommit
	}
	return 0
}

func (m *AppendEntriesArgs) GetEntries() []*Entry {
	if m != nil {
		return m.Entries
	}
	return nil
}

// Output from AppendEntries
type AppendEntriesRet struct {
	Term                 int64    `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	Success              bool     `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppendEntriesRet) Reset()         { *m = AppendEntriesRet{} }
func (m *AppendEntriesRet) String() string { return proto.CompactTextString(m) }
func (*AppendEntriesRet) ProtoMessage()    {}
func (*AppendEntriesRet) Descriptor() ([]byte, []int) {
	return fileDescriptor_2216fe83c9c12408, []int{15}
}

func (m *AppendEntriesRet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppendEntriesRet.Unmarshal(m, b)
}
func (m *AppendEntriesRet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppendEntriesRet.Marshal(b, m, deterministic)
}
func (m *AppendEntriesRet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppendEntriesRet.Merge(m, src)
}
func (m *AppendEntriesRet) XXX_Size() int {
	return xxx_messageInfo_AppendEntriesRet.Size(m)
}
func (m *AppendEntriesRet) XXX_DiscardUnknown() {
	xxx_messageInfo_AppendEntriesRet.DiscardUnknown(m)
}

var xxx_messageInfo_AppendEntriesRet proto.InternalMessageInfo

func (m *AppendEntriesRet) GetTerm() int64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *AppendEntriesRet) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

// Input to InstallSnapshot
type InstallSnapshotArgs struct {
	Term                 int64    `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	LeaderID             string   `protobuf:"bytes,2,opt,name=leaderID,proto3" json:"leaderID,omitempty"`
	LastLogEntry         *Entry   `protobuf:"bytes,3,opt,name=lastLogEntry,proto3" json:"lastLogEntry,omitempty"`
	Data                 []byte   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InstallSnapshotArgs) Reset()         { *m = InstallSnapshotArgs{} }
func (m *InstallSnapshotArgs) String() string { return proto.CompactTextString(m) }
func (*InstallSnapshotArgs) ProtoMessage()    {}
func (*InstallSnapshotArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_2216fe83c9c12408, []int{16}
}

func (m *InstallSnapshotArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstallSnapshotArgs.Unmarshal(m, b)
}
func (m *InstallSnapshotArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstallSnapshotArgs.Marshal(b, m, deterministic)
}
func (m *InstallSnapshotArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstallSnapshotArgs.Merge(m, src)
}
func (m *InstallSnapshotArgs) XXX_Size() int {
	return xxx_messageInfo_InstallSnapshotArgs.Size(m)
}
func (m *InstallSnapshotArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_InstallSnapshotArgs.DiscardUnknown(m)
}

var xxx_messageInfo_InstallSnapshotArgs proto.InternalMessageInfo

func (m *InstallSnapshotArgs) GetTerm() int64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *InstallSnapshotArgs) GetLeaderID() string {
	if m != nil {
		return m.LeaderID
	}
	return ""
}

func (m *InstallSnapshotArgs) GetLastLogEntry() *Entry {
	if m != nil {
		return m.LastLogEntry
	}
	return nil
}

func (m *InstallSnapshotArgs) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// Output from InstallSnapshot
type InstallSnapshotRet struct {
	Term                 int64    `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	Success              bool     `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InstallSnapshotRet) Reset()         { *m = InstallSnapshotRet{} }
func (m *InstallSnapshotRet) String() string { return proto.CompactTextString(m) }
func (*InstallSnapshotRet) ProtoMessage()    {}
func (*InstallSnapshotRet) Descriptor() ([]byte, []int) {
	return fileDescriptor_2216fe83c9c12408, []int{17}
}

func (m *InstallSnapshotRet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstallSnapshotRet.Unmarshal(m, b)
}
func (m *InstallSnapshotRet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstallSnapshotRet.Marshal(b, m, deterministic)
}
func (m *InstallSnapshotRet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstallSnapshotRet.Merge(m, src)
}
func (m *InstallSnapshotRet) XXX_Size() int {
	return xxx_messageInfo_InstallSnapshotRet.Size(m)
}
func (m *InstallSnapshotRet) XXX_DiscardUnknown() {
	xxx_messageInfo_InstallSnapshotRet.DiscardUnknown(m)
}

var xxx_messageInfo_InstallSnapshotRet proto.InternalMessageInfo

func (m *InstallSnapshotRet) GetTerm() int64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *InstallSnapshotRet) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

// Input to RequestVote
type RequestVoteArgs struct {
	Term                 int64    `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	CandidateID          string   `protobuf:"bytes,2,opt,name=candidateID,proto3" json:"candidateID,omitempty"`
	LastLogIndex         int64    `protobuf:"varint,3,opt,name=lastLogIndex,proto3" json:"lastLogIndex,omitempty"`
	LasLogTerm           int64    `protobuf:"varint,4,opt,name=lasLogTerm,proto3" json:"lasLogTerm,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestVoteArgs) Reset()         { *m = RequestVoteArgs{} }
func (m *RequestVoteArgs) String() string { return proto.CompactTextString(m) }
func (*RequestVoteArgs) ProtoMessage()    {}
func (*RequestVoteArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_2216fe83c9c12408, []int{18}
}

func (m *RequestVoteArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestVoteArgs.Unmarshal(m, b)
}
func (m *RequestVoteArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestVoteArgs.Marshal(b, m, deterministic)
}
func (m *RequestVoteArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestVoteArgs.Merge(m, src)
}
func (m *RequestVoteArgs) XXX_Size() int {
	return xxx_messageInfo_RequestVoteArgs.Size(m)
}
func (m *RequestVoteArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestVoteArgs.DiscardUnknown(m)
}

var xxx_messageInfo_RequestVoteArgs proto.InternalMessageInfo

func (m *RequestVoteArgs) GetTerm() int64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *RequestVoteArgs) GetCandidateID() string {
	if m != nil {
		return m.CandidateID
	}
	return ""
}

func (m *RequestVoteArgs) GetLastLogIndex() int64 {
	if m != nil {
		return m.LastLogIndex
	}
	return 0
}

func (m *RequestVoteArgs) GetLasLogTerm() int64 {
	if m != nil {
		return m.LasLogTerm
	}
	return 0
}

// Output from RequestVote
type RequestVoteRet struct {
	Term                 int64    `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	VoteGranted          bool     `protobuf:"varint,2,opt,name=voteGranted,proto3" json:"voteGranted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestVoteRet) Reset()         { *m = RequestVoteRet{} }
func (m *RequestVoteRet) String() string { return proto.CompactTextString(m) }
func (*RequestVoteRet) ProtoMessage()    {}
func (*RequestVoteRet) Descriptor() ([]byte, []int) {
	return fileDescriptor_2216fe83c9c12408, []int{19}
}

func (m *RequestVoteRet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestVoteRet.Unmarshal(m, b)
}
func (m *RequestVoteRet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestVoteRet.Marshal(b, m, deterministic)
}
func (m *RequestVoteRet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestVoteRet.Merge(m, src)
}
func (m *RequestVoteRet) XXX_Size() int {
	return xxx_messageInfo_RequestVoteRet.Size(m)
}
func (m *RequestVoteRet) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestVoteRet.DiscardUnknown(m)
}

var xxx_messageInfo_RequestVoteRet proto.InternalMessageInfo

func (m *RequestVoteRet) GetTerm() int64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *RequestVoteRet) GetVoteGranted() bool {
	if m != nil {
		return m.VoteGranted
	}
	return false
}

//============================= for shard master =================================//
type ServerList struct {
	List                 []string `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerList) Reset()         { *m = ServerList{} }
func (m *ServerList) String() string { return proto.CompactTextString(m) }
func (*ServerList) ProtoMessage()    {}
func (*ServerList) Descriptor() ([]byte, []int) {
	return fileDescriptor_2216fe83c9c12408, []int{20}
}

func (m *ServerList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerList.Unmarshal(m, b)
}
func (m *ServerList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerList.Marshal(b, m, deterministic)
}
func (m *ServerList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerList.Merge(m, src)
}
func (m *ServerList) XXX_Size() int {
	return xxx_messageInfo_ServerList.Size(m)
}
func (m *ServerList) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerList.DiscardUnknown(m)
}

var xxx_messageInfo_ServerList proto.InternalMessageInfo

func (m *ServerList) GetList() []string {
	if m != nil {
		return m.List
	}
	return nil
}

type GroupIDs struct {
	Ids                  []int64  `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GroupIDs) Reset()         { *m = GroupIDs{} }
func (m *GroupIDs) String() string { return proto.CompactTextString(m) }
func (*GroupIDs) ProtoMessage()    {}
func (*GroupIDs) Descriptor() ([]byte, []int) {
	return fileDescriptor_2216fe83c9c12408, []int{21}
}

func (m *GroupIDs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupIDs.Unmarshal(m, b)
}
func (m *GroupIDs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupIDs.Marshal(b, m, deterministic)
}
func (m *GroupIDs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupIDs.Merge(m, src)
}
func (m *GroupIDs) XXX_Size() int {
	return xxx_messageInfo_GroupIDs.Size(m)
}
func (m *GroupIDs) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupIDs.DiscardUnknown(m)
}

var xxx_messageInfo_GroupIDs proto.InternalMessageInfo

func (m *GroupIDs) GetIds() []int64 {
	if m != nil {
		return m.Ids
	}
	return nil
}

type ShardsMapping struct {
	Gids                 []int64  `protobuf:"varint,1,rep,packed,name=gids,proto3" json:"gids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShardsMapping) Reset()         { *m = ShardsMapping{} }
func (m *ShardsMapping) String() string { return proto.CompactTextString(m) }
func (*ShardsMapping) ProtoMessage()    {}
func (*ShardsMapping) Descriptor() ([]byte, []int) {
	return fileDescriptor_2216fe83c9c12408, []int{22}
}

func (m *ShardsMapping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShardsMapping.Unmarshal(m, b)
}
func (m *ShardsMapping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShardsMapping.Marshal(b, m, deterministic)
}
func (m *ShardsMapping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShardsMapping.Merge(m, src)
}
func (m *ShardsMapping) XXX_Size() int {
	return xxx_messageInfo_ShardsMapping.Size(m)
}
func (m *ShardsMapping) XXX_DiscardUnknown() {
	xxx_messageInfo_ShardsMapping.DiscardUnknown(m)
}

var xxx_messageInfo_ShardsMapping proto.InternalMessageInfo

func (m *ShardsMapping) GetGids() []int64 {
	if m != nil {
		return m.Gids
	}
	return nil
}

type GroupServersMap struct {
	Map                  map[int64]*ServerList `protobuf:"bytes,1,rep,name=map,proto3" json:"map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GroupServersMap) Reset()         { *m = GroupServersMap{} }
func (m *GroupServersMap) String() string { return proto.CompactTextString(m) }
func (*GroupServersMap) ProtoMessage()    {}
func (*GroupServersMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_2216fe83c9c12408, []int{23}
}

func (m *GroupServersMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupServersMap.Unmarshal(m, b)
}
func (m *GroupServersMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupServersMap.Marshal(b, m, deterministic)
}
func (m *GroupServersMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupServersMap.Merge(m, src)
}
func (m *GroupServersMap) XXX_Size() int {
	return xxx_messageInfo_GroupServersMap.Size(m)
}
func (m *GroupServersMap) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupServersMap.DiscardUnknown(m)
}

var xxx_messageInfo_GroupServersMap proto.InternalMessageInfo

func (m *GroupServersMap) GetMap() map[int64]*ServerList {
	if m != nil {
		return m.Map
	}
	return nil
}

type ShardConfig struct {
	Num                  int64            `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
	ShardsGroupMap       *ShardsMapping   `protobuf:"bytes,2,opt,name=shardsGroupMap,proto3" json:"shardsGroupMap,omitempty"`
	Servers              *GroupServersMap `protobuf:"bytes,3,opt,name=servers,proto3" json:"servers,omitempty"`
	MaxConfigNum         int64            `protobuf:"varint,4,opt,name=maxConfigNum,proto3" json:"maxConfigNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ShardConfig) Reset()         { *m = ShardConfig{} }
func (m *ShardConfig) String() string { return proto.CompactTextString(m) }
func (*ShardConfig) ProtoMessage()    {}
func (*ShardConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_2216fe83c9c12408, []int{24}
}

func (m *ShardConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShardConfig.Unmarshal(m, b)
}
func (m *ShardConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShardConfig.Marshal(b, m, deterministic)
}
func (m *ShardConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShardConfig.Merge(m, src)
}
func (m *ShardConfig) XXX_Size() int {
	return xxx_messageInfo_ShardConfig.Size(m)
}
func (m *ShardConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ShardConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ShardConfig proto.InternalMessageInfo

func (m *ShardConfig) GetNum() int64 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *ShardConfig) GetShardsGroupMap() *ShardsMapping {
	if m != nil {
		return m.ShardsGroupMap
	}
	return nil
}

func (m *ShardConfig) GetServers() *GroupServersMap {
	if m != nil {
		return m.Servers
	}
	return nil
}

func (m *ShardConfig) GetMaxConfigNum() int64 {
	if m != nil {
		return m.MaxConfigNum
	}
	return 0
}

type JoinArgs struct {
	Servers              *GroupServersMap `protobuf:"bytes,1,opt,name=servers,proto3" json:"servers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *JoinArgs) Reset()         { *m = JoinArgs{} }
func (m *JoinArgs) String() string { return proto.CompactTextString(m) }
func (*JoinArgs) ProtoMessage()    {}
func (*JoinArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_2216fe83c9c12408, []int{25}
}

func (m *JoinArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinArgs.Unmarshal(m, b)
}
func (m *JoinArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinArgs.Marshal(b, m, deterministic)
}
func (m *JoinArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinArgs.Merge(m, src)
}
func (m *JoinArgs) XXX_Size() int {
	return xxx_messageInfo_JoinArgs.Size(m)
}
func (m *JoinArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinArgs.DiscardUnknown(m)
}

var xxx_messageInfo_JoinArgs proto.InternalMessageInfo

func (m *JoinArgs) GetServers() *GroupServersMap {
	if m != nil {
		return m.Servers
	}
	return nil
}

type LeaveArgs struct {
	Gids                 *GroupIDs `protobuf:"bytes,1,opt,name=gids,proto3" json:"gids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *LeaveArgs) Reset()         { *m = LeaveArgs{} }
func (m *LeaveArgs) String() string { return proto.CompactTextString(m) }
func (*LeaveArgs) ProtoMessage()    {}
func (*LeaveArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_2216fe83c9c12408, []int{26}
}

func (m *LeaveArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeaveArgs.Unmarshal(m, b)
}
func (m *LeaveArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeaveArgs.Marshal(b, m, deterministic)
}
func (m *LeaveArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeaveArgs.Merge(m, src)
}
func (m *LeaveArgs) XXX_Size() int {
	return xxx_messageInfo_LeaveArgs.Size(m)
}
func (m *LeaveArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_LeaveArgs.DiscardUnknown(m)
}

var xxx_messageInfo_LeaveArgs proto.InternalMessageInfo

func (m *LeaveArgs) GetGids() *GroupIDs {
	if m != nil {
		return m.Gids
	}
	return nil
}

type MoveArgs struct {
	Shard                int64    `protobuf:"varint,1,opt,name=shard,proto3" json:"shard,omitempty"`
	Gid                  int64    `protobuf:"varint,2,opt,name=gid,proto3" json:"gid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MoveArgs) Reset()         { *m = MoveArgs{} }
func (m *MoveArgs) String() string { return proto.CompactTextString(m) }
func (*MoveArgs) ProtoMessage()    {}
func (*MoveArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_2216fe83c9c12408, []int{27}
}

func (m *MoveArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveArgs.Unmarshal(m, b)
}
func (m *MoveArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveArgs.Marshal(b, m, deterministic)
}
func (m *MoveArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveArgs.Merge(m, src)
}
func (m *MoveArgs) XXX_Size() int {
	return xxx_messageInfo_MoveArgs.Size(m)
}
func (m *MoveArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveArgs.DiscardUnknown(m)
}

var xxx_messageInfo_MoveArgs proto.InternalMessageInfo

func (m *MoveArgs) GetShard() int64 {
	if m != nil {
		return m.Shard
	}
	return 0
}

func (m *MoveArgs) GetGid() int64 {
	if m != nil {
		return m.Gid
	}
	return 0
}

type QueryArgs struct {
	Num                  int64    `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryArgs) Reset()         { *m = QueryArgs{} }
func (m *QueryArgs) String() string { return proto.CompactTextString(m) }
func (*QueryArgs) ProtoMessage()    {}
func (*QueryArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_2216fe83c9c12408, []int{28}
}

func (m *QueryArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryArgs.Unmarshal(m, b)
}
func (m *QueryArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryArgs.Marshal(b, m, deterministic)
}
func (m *QueryArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryArgs.Merge(m, src)
}
func (m *QueryArgs) XXX_Size() int {
	return xxx_messageInfo_QueryArgs.Size(m)
}
func (m *QueryArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryArgs.DiscardUnknown(m)
}

var xxx_messageInfo_QueryArgs proto.InternalMessageInfo

func (m *QueryArgs) GetNum() int64 {
	if m != nil {
		return m.Num
	}
	return 0
}

type ShardMigrationArgs struct {
	Shard                int64    `protobuf:"varint,1,opt,name=shard,proto3" json:"shard,omitempty"`
	ConfigNum            int64    `protobuf:"varint,2,opt,name=configNum,proto3" json:"configNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShardMigrationArgs) Reset()         { *m = ShardMigrationArgs{} }
func (m *ShardMigrationArgs) String() string { return proto.CompactTextString(m) }
func (*ShardMigrationArgs) ProtoMessage()    {}
func (*ShardMigrationArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_2216fe83c9c12408, []int{29}
}

func (m *ShardMigrationArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShardMigrationArgs.Unmarshal(m, b)
}
func (m *ShardMigrationArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShardMigrationArgs.Marshal(b, m, deterministic)
}
func (m *ShardMigrationArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShardMigrationArgs.Merge(m, src)
}
func (m *ShardMigrationArgs) XXX_Size() int {
	return xxx_messageInfo_ShardMigrationArgs.Size(m)
}
func (m *ShardMigrationArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_ShardMigrationArgs.DiscardUnknown(m)
}

var xxx_messageInfo_ShardMigrationArgs proto.InternalMessageInfo

func (m *ShardMigrationArgs) GetShard() int64 {
	if m != nil {
		return m.Shard
	}
	return 0
}

func (m *ShardMigrationArgs) GetConfigNum() int64 {
	if m != nil {
		return m.ConfigNum
	}
	return 0
}

type ShardMigrationReply struct {
	MigStore             map[string]string `protobuf:"bytes,1,rep,name=migStore,proto3" json:"migStore,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Success              bool              `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ShardMigrationReply) Reset()         { *m = ShardMigrationReply{} }
func (m *ShardMigrationReply) String() string { return proto.CompactTextString(m) }
func (*ShardMigrationReply) ProtoMessage()    {}
func (*ShardMigrationReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_2216fe83c9c12408, []int{30}
}

func (m *ShardMigrationReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShardMigrationReply.Unmarshal(m, b)
}
func (m *ShardMigrationReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShardMigrationReply.Marshal(b, m, deterministic)
}
func (m *ShardMigrationReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShardMigrationReply.Merge(m, src)
}
func (m *ShardMigrationReply) XXX_Size() int {
	return xxx_messageInfo_ShardMigrationReply.Size(m)
}
func (m *ShardMigrationReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ShardMigrationReply.DiscardUnknown(m)
}

var xxx_messageInfo_ShardMigrationReply proto.InternalMessageInfo

func (m *ShardMigrationReply) GetMigStore() map[string]string {
	if m != nil {
		return m.MigStore
	}
	return nil
}

func (m *ShardMigrationReply) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterEnum("pb.Op", Op_name, Op_value)
	proto.RegisterType((*Key)(nil), "pb.Key")
	proto.RegisterType((*Value)(nil), "pb.Value")
	proto.RegisterType((*KeyValue)(nil), "pb.KeyValue")
	proto.RegisterType((*Success)(nil), "pb.Success")
	proto.RegisterType((*Failure)(nil), "pb.Failure")
	proto.RegisterType((*Error)(nil), "pb.Error")
	proto.RegisterType((*CASArg)(nil), "pb.CASArg")
	proto.RegisterType((*Empty)(nil), "pb.Empty")
	proto.RegisterType((*Redirect)(nil), "pb.Redirect")
	proto.RegisterType((*ErrWrongGroup)(nil), "pb.ErrWrongGroup")
	proto.RegisterType((*Result)(nil), "pb.Result")
	proto.RegisterType((*Command)(nil), "pb.Command")
	proto.RegisterType((*Servers)(nil), "pb.Servers")
	proto.RegisterType((*Entry)(nil), "pb.Entry")
	proto.RegisterType((*AppendEntriesArgs)(nil), "pb.AppendEntriesArgs")
	proto.RegisterType((*AppendEntriesRet)(nil), "pb.AppendEntriesRet")
	proto.RegisterType((*InstallSnapshotArgs)(nil), "pb.InstallSnapshotArgs")
	proto.RegisterType((*InstallSnapshotRet)(nil), "pb.InstallSnapshotRet")
	proto.RegisterType((*RequestVoteArgs)(nil), "pb.RequestVoteArgs")
	proto.RegisterType((*RequestVoteRet)(nil), "pb.RequestVoteRet")
	proto.RegisterType((*ServerList)(nil), "pb.ServerList")
	proto.RegisterType((*GroupIDs)(nil), "pb.GroupIDs")
	proto.RegisterType((*ShardsMapping)(nil), "pb.ShardsMapping")
	proto.RegisterType((*GroupServersMap)(nil), "pb.GroupServersMap")
	proto.RegisterMapType((map[int64]*ServerList)(nil), "pb.GroupServersMap.MapEntry")
	proto.RegisterType((*ShardConfig)(nil), "pb.ShardConfig")
	proto.RegisterType((*JoinArgs)(nil), "pb.JoinArgs")
	proto.RegisterType((*LeaveArgs)(nil), "pb.LeaveArgs")
	proto.RegisterType((*MoveArgs)(nil), "pb.MoveArgs")
	proto.RegisterType((*QueryArgs)(nil), "pb.QueryArgs")
	proto.RegisterType((*ShardMigrationArgs)(nil), "pb.ShardMigrationArgs")
	proto.RegisterType((*ShardMigrationReply)(nil), "pb.ShardMigrationReply")
	proto.RegisterMapType((map[string]string)(nil), "pb.ShardMigrationReply.MigStoreEntry")
}

func init() { proto.RegisterFile("kv.proto", fileDescriptor_2216fe83c9c12408) }

var fileDescriptor_2216fe83c9c12408 = []byte{
	// 1447 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x57, 0xcd, 0x72, 0xdb, 0x46,
	0x12, 0x26, 0x08, 0xfe, 0x80, 0x4d, 0xfd, 0xd0, 0x2d, 0xaf, 0xcd, 0xa5, 0x65, 0x9b, 0x1e, 0x7b,
	0xcb, 0x5e, 0x6f, 0x49, 0xb5, 0x45, 0x5f, 0xec, 0xdd, 0xaa, 0xdd, 0xa5, 0x29, 0x4a, 0x94, 0x2d,
	0x5a, 0xeb, 0xa1, 0xa3, 0x54, 0x4e, 0xae, 0x31, 0x39, 0x86, 0x11, 0x91, 0x00, 0x3c, 0x00, 0x69,
	0xeb, 0x9e, 0x43, 0x52, 0x79, 0x96, 0x54, 0xde, 0x22, 0xa7, 0x9c, 0x92, 0xd7, 0xc9, 0x21, 0x35,
	0x3f, 0x00, 0x01, 0x4a, 0x4a, 0xe2, 0xdc, 0x66, 0xba, 0xbf, 0xf9, 0xd0, 0xdf, 0xf4, 0x4c, 0xf7,
	0x00, 0x9c, 0xd3, 0xc5, 0x6e, 0x28, 0x82, 0x38, 0xc0, 0x62, 0xf8, 0x86, 0x5c, 0x07, 0xfb, 0x39,
	0x3f, 0xc3, 0x06, 0xd8, 0xa7, 0xfc, 0xac, 0x69, 0xb5, 0xad, 0x07, 0x35, 0x2a, 0x87, 0xe4, 0x26,
	0x94, 0x4f, 0xd8, 0x74, 0xce, 0xf1, 0x2a, 0x94, 0x17, 0x72, 0x60, 0x9c, 0x7a, 0x42, 0x3a, 0xe0,
	0x3c, 0xe7, 0x67, 0x1a, 0x71, 0x6e, 0xf1, 0x72, 0x4d, 0x31, 0xbb, 0xa6, 0x06, 0xd5, 0xd1, 0x7c,
	0x3c, 0xe6, 0x51, 0x44, 0x6e, 0x40, 0x75, 0x9f, 0x79, 0xd3, 0xb9, 0x50, 0xab, 0x67, 0x91, 0x9b,
	0xac, 0x9e, 0x45, 0x2e, 0xf9, 0x2b, 0x94, 0xfb, 0x42, 0x04, 0xe2, 0x02, 0xd7, 0x01, 0x54, 0x7a,
	0xdd, 0x51, 0x57, 0xb8, 0xb8, 0x0d, 0xc5, 0xd3, 0x85, 0x72, 0xd5, 0x3b, 0x6b, 0xbb, 0xe1, 0x9b,
	0xdd, 0x24, 0x1c, 0x5a, 0x3c, 0x5d, 0xe0, 0xed, 0x6c, 0x00, 0xf5, 0x4e, 0x4d, 0x02, 0xb4, 0xd7,
	0xc4, 0x52, 0x85, 0x72, 0x7f, 0x16, 0xc6, 0x67, 0x84, 0x80, 0x43, 0xf9, 0xc4, 0x13, 0x7c, 0x1c,
	0xe3, 0x35, 0xa8, 0x44, 0x5c, 0x2c, 0xb8, 0x30, 0x9f, 0x34, 0x33, 0xf2, 0x18, 0xd6, 0xfb, 0x42,
	0x7c, 0x2e, 0x02, 0xdf, 0x3d, 0x10, 0xc1, 0x3c, 0xc4, 0xfb, 0x50, 0x19, 0x07, 0xfe, 0x5b, 0xcf,
	0x35, 0x01, 0x6c, 0x4a, 0xfe, 0xd1, 0x3b, 0x26, 0x26, 0x3d, 0x65, 0xa6, 0xc6, 0x4d, 0x7e, 0xb1,
	0xa0, 0x42, 0x79, 0x34, 0x9f, 0xc6, 0xf8, 0x10, 0x1c, 0x61, 0x3e, 0x94, 0x0d, 0x3b, 0xf9, 0xf8,
	0xa0, 0x40, 0x53, 0x3f, 0xde, 0x52, 0xe2, 0x8a, 0xe7, 0xc5, 0x0d, 0x0a, 0x4a, 0xde, 0x0d, 0xb0,
	0xa2, 0xa6, 0xad, 0xdc, 0x75, 0xf5, 0x69, 0xbd, 0xad, 0x83, 0x02, 0xb5, 0x22, 0xfc, 0x07, 0x54,
	0x3e, 0xa8, 0x50, 0x9b, 0x25, 0x85, 0xb8, 0x22, 0x11, 0xb9, 0xf8, 0x07, 0x05, 0x6a, 0x20, 0x78,
	0x1f, 0xaa, 0x6f, 0x75, 0x22, 0x9a, 0xe5, 0x25, 0x9f, 0xc9, 0xcd, 0xa0, 0x40, 0x13, 0x2f, 0xfe,
	0x3d, 0x95, 0x5c, 0xb9, 0x50, 0xb2, 0xe4, 0xd4, 0x80, 0xa7, 0x0e, 0x54, 0x84, 0xd2, 0x4c, 0x7e,
	0xb4, 0xa1, 0xda, 0x0b, 0x66, 0x33, 0xe6, 0x4f, 0xf0, 0x1e, 0xd4, 0x82, 0x90, 0x0b, 0x16, 0x7b,
	0x81, 0xaf, 0x36, 0x60, 0xa3, 0x53, 0x91, 0x1c, 0xc7, 0x21, 0x5d, 0x3a, 0xf0, 0x06, 0xd8, 0x2e,
	0x8f, 0x8d, 0xf4, 0xaa, 0x91, 0x3e, 0x28, 0x50, 0x69, 0xc5, 0x36, 0xd8, 0x11, 0x8f, 0x8d, 0xf0,
	0xd5, 0x7d, 0x91, 0x2e, 0xbc, 0x03, 0xe5, 0xf1, 0x94, 0x33, 0x61, 0xa4, 0xab, 0xbc, 0xab, 0x3c,
	0x0f, 0x0a, 0x54, 0x7b, 0xf0, 0x16, 0xd8, 0x63, 0x16, 0x19, 0xb5, 0x20, 0x01, 0xfa, 0x44, 0x49,
	0x8a, 0x31, 0x8b, 0x64, 0x9e, 0xbe, 0x0c, 0x3c, 0xbf, 0x2b, 0xdc, 0xc8, 0x48, 0x55, 0x5f, 0x7a,
	0x66, 0x6c, 0x32, 0x4f, 0x89, 0x1f, 0x77, 0xa0, 0x36, 0xe5, 0x6c, 0xc1, 0x15, 0xb8, 0xaa, 0xc0,
	0xeb, 0x12, 0x7c, 0x94, 0x18, 0x07, 0x05, 0xba, 0x44, 0x48, 0xea, 0x59, 0x60, 0xd0, 0xce, 0x92,
	0x7a, 0x18, 0xa4, 0xe0, 0xd4, 0x2f, 0xa9, 0xdf, 0xcf, 0xb9, 0x38, 0x53, 0xe0, 0xda, 0x92, 0xfa,
	0x65, 0x62, 0x94, 0xd4, 0x29, 0x02, 0x1f, 0x41, 0x3d, 0x5a, 0x26, 0xa3, 0x09, 0x97, 0xe5, 0x28,
	0x8b, 0x92, 0xc9, 0xd7, 0x27, 0x3c, 0x6a, 0xd6, 0x33, 0x87, 0x49, 0x9b, 0x64, 0xf2, 0x8d, 0xf7,
	0x69, 0x19, 0x6c, 0x26, 0x5c, 0xf2, 0x5f, 0xa8, 0x1a, 0x27, 0xb6, 0xc0, 0x19, 0xcf, 0x85, 0x38,
	0xf2, 0xa2, 0xd8, 0x5c, 0x96, 0x74, 0x8e, 0x4d, 0xa8, 0xfa, 0xfc, 0x83, 0x72, 0xe9, 0xfb, 0x9f,
	0x4c, 0xc9, 0xff, 0xa1, 0xdc, 0xf7, 0x63, 0x71, 0x86, 0x08, 0xa5, 0x98, 0x8b, 0x99, 0x5a, 0x6a,
	0x53, 0x35, 0x96, 0x45, 0xc3, 0xf3, 0x27, 0xfc, 0xa3, 0x5a, 0x64, 0x53, 0x3d, 0xc1, 0x9b, 0x60,
	0x8f, 0x67, 0x93, 0xec, 0x61, 0x37, 0x07, 0x8a, 0x4a, 0x3b, 0xf9, 0xc9, 0x82, 0x2b, 0xdd, 0x30,
	0xe4, 0xfe, 0x44, 0x12, 0x7b, 0x3c, 0x52, 0xbb, 0x71, 0x11, 0x7d, 0x0b, 0x9c, 0x29, 0x67, 0x13,
	0x2e, 0x0e, 0xf7, 0x4c, 0x58, 0xe9, 0x1c, 0x09, 0xac, 0x85, 0x82, 0x2f, 0x8e, 0x02, 0xf7, 0x50,
	0x45, 0x60, 0xab, 0x75, 0x39, 0x1b, 0xb6, 0xa1, 0x6e, 0xe6, 0xaf, 0x24, 0x75, 0x49, 0x41, 0xb2,
	0x26, 0xc9, 0xa2, 0x19, 0x65, 0x84, 0x5e, 0xac, 0x8e, 0x98, 0x4d, 0x73, 0x36, 0xbc, 0x0b, 0x55,
	0xae, 0x03, 0x6d, 0x56, 0xda, 0x76, 0x7a, 0x44, 0xe5, 0xa6, 0xd0, 0xc4, 0x43, 0xfe, 0x07, 0x8d,
	0x9c, 0x26, 0xca, 0xe3, 0x0b, 0x25, 0x35, 0xa1, 0x1a, 0xe9, 0x9b, 0xaf, 0x14, 0x39, 0x34, 0x99,
	0x92, 0xaf, 0x2d, 0xd8, 0x3a, 0xf4, 0xa3, 0x98, 0x4d, 0xa7, 0x23, 0x9f, 0x85, 0xd1, 0xbb, 0x20,
	0xfe, 0x53, 0x1b, 0xb3, 0x03, 0x6b, 0x53, 0x16, 0xc5, 0x47, 0x81, 0xab, 0x42, 0x34, 0x69, 0xc8,
	0xc4, 0x9c, 0x73, 0x4b, 0xfa, 0x09, 0x8b, 0x99, 0xda, 0x9c, 0x35, 0xaa, 0xc6, 0xe4, 0x29, 0xe0,
	0x4a, 0x24, 0x9f, 0x2e, 0xe7, 0x5b, 0x0b, 0x36, 0x29, 0x7f, 0x3f, 0xe7, 0x51, 0x7c, 0x12, 0xc4,
	0xfc, 0x52, 0x29, 0x6d, 0xa8, 0x8f, 0x99, 0x3f, 0xf1, 0x26, 0x2c, 0xe6, 0xa9, 0x9a, 0xac, 0x49,
	0xe5, 0x48, 0x47, 0x9c, 0xcb, 0x74, 0xd6, 0x86, 0xb7, 0x00, 0xa6, 0x2c, 0xca, 0x27, 0x3a, 0x63,
	0x21, 0xfb, 0xb0, 0x91, 0x09, 0xe6, 0x32, 0x35, 0x6d, 0xa8, 0x2f, 0x82, 0x98, 0x1f, 0x08, 0xe6,
	0xc7, 0x7c, 0x62, 0x14, 0x65, 0x4d, 0xa4, 0x0d, 0xa0, 0xaf, 0x93, 0xba, 0x35, 0x08, 0xa5, 0xa9,
	0xbe, 0x4d, 0xf6, 0x83, 0x1a, 0x55, 0x63, 0xb2, 0x0d, 0x8e, 0x2a, 0xd8, 0x87, 0x7b, 0x91, 0x6c,
	0x86, 0xde, 0x24, 0x52, 0x6e, 0x9b, 0xca, 0x21, 0xb9, 0x0b, 0xeb, 0xea, 0x72, 0x47, 0x43, 0x16,
	0x86, 0x9e, 0xef, 0x4a, 0x0a, 0x77, 0x89, 0x51, 0x63, 0xf2, 0x8d, 0x05, 0x9b, 0x8a, 0xc3, 0xdc,
	0xdc, 0x21, 0x0b, 0x71, 0x17, 0xec, 0x19, 0x0b, 0x15, 0xac, 0xde, 0xd9, 0x96, 0xc9, 0x5c, 0x41,
	0xec, 0x0e, 0x59, 0xa8, 0xf3, 0x2b, 0x81, 0xad, 0x7d, 0x70, 0x12, 0x43, 0xb6, 0xd9, 0xdb, 0xba,
	0xd9, 0xdf, 0xcb, 0xf7, 0xda, 0x8d, 0x65, 0x0d, 0x91, 0xba, 0x4c, 0xc3, 0xfd, 0x57, 0xf1, 0xb1,
	0x45, 0xbe, 0xb3, 0xa0, 0x9e, 0x29, 0x47, 0x92, 0xcb, 0x9f, 0x27, 0xbb, 0x26, 0x87, 0xf8, 0x04,
	0x36, 0x54, 0x81, 0x8a, 0x54, 0x40, 0x43, 0x16, 0x1a, 0xd2, 0x2b, 0x69, 0x25, 0x4b, 0xc4, 0xd2,
	0x15, 0x20, 0xee, 0x2c, 0x8b, 0x99, 0x3e, 0xa5, 0x5b, 0x17, 0x08, 0x4b, 0x4b, 0x9a, 0x3c, 0x08,
	0x33, 0xf6, 0x51, 0x07, 0xf2, 0x62, 0x9e, 0xa4, 0x39, 0x67, 0x23, 0x4f, 0xc0, 0x79, 0xb6, 0x2c,
	0xf5, 0x29, 0xbd, 0xf5, 0xfb, 0xf4, 0x64, 0x07, 0x6a, 0x69, 0x13, 0xc0, 0x76, 0x9a, 0x97, 0xb4,
	0xe6, 0x27, 0x69, 0x35, 0x59, 0xea, 0x80, 0x93, 0x74, 0x01, 0x59, 0x07, 0x95, 0x34, 0xb3, 0x2f,
	0x7a, 0x22, 0xf7, 0xca, 0xf5, 0x26, 0xa6, 0x36, 0xca, 0x21, 0xb9, 0x09, 0xb5, 0xb4, 0x19, 0x9c,
	0xdf, 0x4a, 0x32, 0x00, 0x54, 0x1b, 0x36, 0xf4, 0x5c, 0xdd, 0x5b, 0x7f, 0x83, 0x7c, 0x1b, 0x6a,
	0xe3, 0x74, 0x27, 0xf4, 0x27, 0x96, 0x06, 0xf2, 0xbd, 0x05, 0x5b, 0x79, 0x2a, 0xca, 0xc3, 0xe9,
	0x19, 0x76, 0xc1, 0x99, 0x79, 0xee, 0x28, 0x0e, 0x04, 0x37, 0x67, 0xe9, 0x6f, 0x69, 0x9a, 0xf2,
	0xd0, 0xdd, 0xa1, 0xc1, 0xe9, 0x43, 0x95, 0x2e, 0xbb, 0xfc, 0xca, 0xb7, 0xfe, 0x0d, 0xeb, 0xb9,
	0x45, 0x7f, 0xf4, 0x95, 0x29, 0x0f, 0xda, 0xc3, 0x05, 0x14, 0x8f, 0x43, 0xac, 0x82, 0x7d, 0xd0,
	0x7f, 0xd5, 0x28, 0xc8, 0xc1, 0xa8, 0xff, 0xaa, 0x61, 0x61, 0x0d, 0xca, 0xbd, 0xa3, 0x7e, 0x97,
	0x36, 0x8a, 0xd2, 0xd6, 0xeb, 0x8e, 0x1a, 0x36, 0x3a, 0x50, 0x7a, 0x76, 0x7c, 0xf8, 0xa2, 0x51,
	0x92, 0xde, 0xa3, 0x7e, 0xf7, 0xa4, 0xdf, 0x28, 0x4b, 0xe3, 0xf0, 0xf8, 0xa4, 0xdf, 0xa8, 0x48,
	0xe3, 0xcb, 0xcf, 0xfa, 0xf4, 0x8b, 0x46, 0x15, 0x1b, 0xb0, 0x36, 0x1a, 0x74, 0xe9, 0xde, 0xeb,
	0xde, 0xf1, 0x8b, 0xfd, 0xc3, 0x83, 0x86, 0x83, 0x1b, 0x00, 0x7a, 0xfc, 0xba, 0x37, 0x38, 0x68,
	0xd4, 0x3a, 0x5f, 0x15, 0xa1, 0xfa, 0x7c, 0xa1, 0xa5, 0x6d, 0x83, 0x7d, 0xc0, 0x63, 0x4c, 0xde,
	0x30, 0x2d, 0xd0, 0xaf, 0x3d, 0xf5, 0x2e, 0x2a, 0xe0, 0x1d, 0xb0, 0x47, 0x3c, 0xc6, 0xdc, 0x23,
	0x66, 0x05, 0xd2, 0x86, 0x72, 0x4f, 0xbd, 0x58, 0x96, 0xaf, 0x98, 0x15, 0xc4, 0x6d, 0xa5, 0x01,
	0x33, 0x8f, 0x98, 0x15, 0x40, 0x0f, 0x36, 0xf2, 0xd9, 0xc0, 0x6b, 0xe7, 0x33, 0x24, 0xcf, 0x45,
	0xeb, 0xfa, 0x25, 0x99, 0x23, 0x05, 0xfc, 0x27, 0x6c, 0xf5, 0xde, 0x31, 0xdf, 0xe5, 0xfa, 0x62,
	0xcc, 0x0d, 0x53, 0xf6, 0xad, 0x90, 0xff, 0x6c, 0xe7, 0x07, 0x0b, 0x4a, 0x94, 0xbd, 0x8d, 0xf1,
	0x3f, 0xb0, 0x9e, 0x6b, 0x64, 0xf8, 0x17, 0x89, 0x3b, 0xd7, 0xaf, 0x5b, 0x57, 0xcf, 0x99, 0x29,
	0x97, 0xf1, 0x3f, 0x86, 0x7a, 0xa6, 0xd2, 0xe2, 0x96, 0xfe, 0x4a, 0xae, 0x0f, 0xb4, 0x70, 0xc5,
	0xa8, 0x57, 0xee, 0xc1, 0xe6, 0x4a, 0xd7, 0x41, 0x25, 0xf1, 0x82, 0xa6, 0xd8, 0xba, 0x76, 0x81,
	0x43, 0xb1, 0x74, 0x7e, 0x4e, 0x0a, 0xd6, 0x90, 0x45, 0x31, 0x17, 0x48, 0xa0, 0x24, 0x0b, 0x02,
	0xe6, 0x5e, 0x84, 0x2b, 0x7b, 0x7e, 0x0f, 0xca, 0xea, 0xe6, 0x63, 0xfe, 0x25, 0xb8, 0x82, 0x22,
	0x50, 0x92, 0x17, 0x1e, 0x73, 0x0f, 0xc0, 0xf3, 0x4c, 0xea, 0x82, 0x63, 0xfe, 0xe1, 0xb7, 0x82,
	0xfa, 0xe4, 0xf4, 0xbc, 0xa9, 0xa8, 0xdf, 0xbf, 0x47, 0xbf, 0x06, 0x00, 0x00, 0xff, 0xff, 0xe0,
	0x2f, 0x29, 0x8d, 0x0a, 0x0e, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// KvStoreClient is the client API for KvStore service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KvStoreClient interface {
	Get(ctx context.Context, in *Key, opts ...grpc.CallOption) (*Result, error)
	Set(ctx context.Context, in *KeyValue, opts ...grpc.CallOption) (*Result, error)
	Clear(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Result, error)
	CAS(ctx context.Context, in *CASArg, opts ...grpc.CallOption) (*Result, error)
	ShardMigration(ctx context.Context, in *ShardMigrationArgs, opts ...grpc.CallOption) (*ShardMigrationReply, error)
	//this is raft membership config, not shard config
	ChangeConfiguration(ctx context.Context, in *Servers, opts ...grpc.CallOption) (*Result, error)
}

type kvStoreClient struct {
	cc *grpc.ClientConn
}

func NewKvStoreClient(cc *grpc.ClientConn) KvStoreClient {
	return &kvStoreClient{cc}
}

func (c *kvStoreClient) Get(ctx context.Context, in *Key, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/pb.KvStore/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kvStoreClient) Set(ctx context.Context, in *KeyValue, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/pb.KvStore/Set", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kvStoreClient) Clear(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/pb.KvStore/Clear", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kvStoreClient) CAS(ctx context.Context, in *CASArg, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/pb.KvStore/CAS", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kvStoreClient) ShardMigration(ctx context.Context, in *ShardMigrationArgs, opts ...grpc.CallOption) (*ShardMigrationReply, error) {
	out := new(ShardMigrationReply)
	err := c.cc.Invoke(ctx, "/pb.KvStore/ShardMigration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kvStoreClient) ChangeConfiguration(ctx context.Context, in *Servers, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/pb.KvStore/ChangeConfiguration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KvStoreServer is the server API for KvStore service.
type KvStoreServer interface {
	Get(context.Context, *Key) (*Result, error)
	Set(context.Context, *KeyValue) (*Result, error)
	Clear(context.Context, *Empty) (*Result, error)
	CAS(context.Context, *CASArg) (*Result, error)
	ShardMigration(context.Context, *ShardMigrationArgs) (*ShardMigrationReply, error)
	//this is raft membership config, not shard config
	ChangeConfiguration(context.Context, *Servers) (*Result, error)
}

func RegisterKvStoreServer(s *grpc.Server, srv KvStoreServer) {
	s.RegisterService(&_KvStore_serviceDesc, srv)
}

func _KvStore_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Key)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvStoreServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.KvStore/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvStoreServer).Get(ctx, req.(*Key))
	}
	return interceptor(ctx, in, info, handler)
}

func _KvStore_Set_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeyValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvStoreServer).Set(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.KvStore/Set",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvStoreServer).Set(ctx, req.(*KeyValue))
	}
	return interceptor(ctx, in, info, handler)
}

func _KvStore_Clear_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvStoreServer).Clear(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.KvStore/Clear",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvStoreServer).Clear(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _KvStore_CAS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CASArg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvStoreServer).CAS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.KvStore/CAS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvStoreServer).CAS(ctx, req.(*CASArg))
	}
	return interceptor(ctx, in, info, handler)
}

func _KvStore_ShardMigration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShardMigrationArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvStoreServer).ShardMigration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.KvStore/ShardMigration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvStoreServer).ShardMigration(ctx, req.(*ShardMigrationArgs))
	}
	return interceptor(ctx, in, info, handler)
}

func _KvStore_ChangeConfiguration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Servers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvStoreServer).ChangeConfiguration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.KvStore/ChangeConfiguration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvStoreServer).ChangeConfiguration(ctx, req.(*Servers))
	}
	return interceptor(ctx, in, info, handler)
}

var _KvStore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.KvStore",
	HandlerType: (*KvStoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _KvStore_Get_Handler,
		},
		{
			MethodName: "Set",
			Handler:    _KvStore_Set_Handler,
		},
		{
			MethodName: "Clear",
			Handler:    _KvStore_Clear_Handler,
		},
		{
			MethodName: "CAS",
			Handler:    _KvStore_CAS_Handler,
		},
		{
			MethodName: "ShardMigration",
			Handler:    _KvStore_ShardMigration_Handler,
		},
		{
			MethodName: "ChangeConfiguration",
			Handler:    _KvStore_ChangeConfiguration_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kv.proto",
}

// RaftClient is the client API for Raft service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RaftClient interface {
	AppendEntries(ctx context.Context, in *AppendEntriesArgs, opts ...grpc.CallOption) (*AppendEntriesRet, error)
	RequestVote(ctx context.Context, in *RequestVoteArgs, opts ...grpc.CallOption) (*RequestVoteRet, error)
	InstallSnapshot(ctx context.Context, in *InstallSnapshotArgs, opts ...grpc.CallOption) (*InstallSnapshotRet, error)
}

type raftClient struct {
	cc *grpc.ClientConn
}

func NewRaftClient(cc *grpc.ClientConn) RaftClient {
	return &raftClient{cc}
}

func (c *raftClient) AppendEntries(ctx context.Context, in *AppendEntriesArgs, opts ...grpc.CallOption) (*AppendEntriesRet, error) {
	out := new(AppendEntriesRet)
	err := c.cc.Invoke(ctx, "/pb.Raft/AppendEntries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *raftClient) RequestVote(ctx context.Context, in *RequestVoteArgs, opts ...grpc.CallOption) (*RequestVoteRet, error) {
	out := new(RequestVoteRet)
	err := c.cc.Invoke(ctx, "/pb.Raft/RequestVote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *raftClient) InstallSnapshot(ctx context.Context, in *InstallSnapshotArgs, opts ...grpc.CallOption) (*InstallSnapshotRet, error) {
	out := new(InstallSnapshotRet)
	err := c.cc.Invoke(ctx, "/pb.Raft/InstallSnapshot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RaftServer is the server API for Raft service.
type RaftServer interface {
	AppendEntries(context.Context, *AppendEntriesArgs) (*AppendEntriesRet, error)
	RequestVote(context.Context, *RequestVoteArgs) (*RequestVoteRet, error)
	InstallSnapshot(context.Context, *InstallSnapshotArgs) (*InstallSnapshotRet, error)
}

func RegisterRaftServer(s *grpc.Server, srv RaftServer) {
	s.RegisterService(&_Raft_serviceDesc, srv)
}

func _Raft_AppendEntries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppendEntriesArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftServer).AppendEntries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Raft/AppendEntries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftServer).AppendEntries(ctx, req.(*AppendEntriesArgs))
	}
	return interceptor(ctx, in, info, handler)
}

func _Raft_RequestVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestVoteArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftServer).RequestVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Raft/RequestVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftServer).RequestVote(ctx, req.(*RequestVoteArgs))
	}
	return interceptor(ctx, in, info, handler)
}

func _Raft_InstallSnapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InstallSnapshotArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftServer).InstallSnapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Raft/InstallSnapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftServer).InstallSnapshot(ctx, req.(*InstallSnapshotArgs))
	}
	return interceptor(ctx, in, info, handler)
}

var _Raft_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Raft",
	HandlerType: (*RaftServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AppendEntries",
			Handler:    _Raft_AppendEntries_Handler,
		},
		{
			MethodName: "RequestVote",
			Handler:    _Raft_RequestVote_Handler,
		},
		{
			MethodName: "InstallSnapshot",
			Handler:    _Raft_InstallSnapshot_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kv.proto",
}

// ShardMasterClient is the client API for ShardMaster service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ShardMasterClient interface {
	Join(ctx context.Context, in *JoinArgs, opts ...grpc.CallOption) (*Result, error)
	Leave(ctx context.Context, in *LeaveArgs, opts ...grpc.CallOption) (*Result, error)
	Move(ctx context.Context, in *MoveArgs, opts ...grpc.CallOption) (*Result, error)
	Query(ctx context.Context, in *QueryArgs, opts ...grpc.CallOption) (*Result, error)
	//this is raft membership config, not shard config
	ChangeConfiguration(ctx context.Context, in *Servers, opts ...grpc.CallOption) (*Result, error)
}

type shardMasterClient struct {
	cc *grpc.ClientConn
}

func NewShardMasterClient(cc *grpc.ClientConn) ShardMasterClient {
	return &shardMasterClient{cc}
}

func (c *shardMasterClient) Join(ctx context.Context, in *JoinArgs, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/pb.ShardMaster/Join", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shardMasterClient) Leave(ctx context.Context, in *LeaveArgs, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/pb.ShardMaster/Leave", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shardMasterClient) Move(ctx context.Context, in *MoveArgs, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/pb.ShardMaster/Move", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shardMasterClient) Query(ctx context.Context, in *QueryArgs, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/pb.ShardMaster/Query", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shardMasterClient) ChangeConfiguration(ctx context.Context, in *Servers, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/pb.ShardMaster/ChangeConfiguration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ShardMasterServer is the server API for ShardMaster service.
type ShardMasterServer interface {
	Join(context.Context, *JoinArgs) (*Result, error)
	Leave(context.Context, *LeaveArgs) (*Result, error)
	Move(context.Context, *MoveArgs) (*Result, error)
	Query(context.Context, *QueryArgs) (*Result, error)
	//this is raft membership config, not shard config
	ChangeConfiguration(context.Context, *Servers) (*Result, error)
}

func RegisterShardMasterServer(s *grpc.Server, srv ShardMasterServer) {
	s.RegisterService(&_ShardMaster_serviceDesc, srv)
}

func _ShardMaster_Join_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShardMasterServer).Join(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ShardMaster/Join",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShardMasterServer).Join(ctx, req.(*JoinArgs))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShardMaster_Leave_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LeaveArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShardMasterServer).Leave(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ShardMaster/Leave",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShardMasterServer).Leave(ctx, req.(*LeaveArgs))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShardMaster_Move_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MoveArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShardMasterServer).Move(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ShardMaster/Move",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShardMasterServer).Move(ctx, req.(*MoveArgs))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShardMaster_Query_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShardMasterServer).Query(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ShardMaster/Query",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShardMasterServer).Query(ctx, req.(*QueryArgs))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShardMaster_ChangeConfiguration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Servers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShardMasterServer).ChangeConfiguration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ShardMaster/ChangeConfiguration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShardMasterServer).ChangeConfiguration(ctx, req.(*Servers))
	}
	return interceptor(ctx, in, info, handler)
}

var _ShardMaster_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.ShardMaster",
	HandlerType: (*ShardMasterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Join",
			Handler:    _ShardMaster_Join_Handler,
		},
		{
			MethodName: "Leave",
			Handler:    _ShardMaster_Leave_Handler,
		},
		{
			MethodName: "Move",
			Handler:    _ShardMaster_Move_Handler,
		},
		{
			MethodName: "Query",
			Handler:    _ShardMaster_Query_Handler,
		},
		{
			MethodName: "ChangeConfiguration",
			Handler:    _ShardMaster_ChangeConfiguration_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kv.proto",
}
